name: Build Debian Package

on:
  workflow_dispatch:
    inputs:
      architecture:
        description: 'Target architecture'
        required: true
        default: 'amd64'
        type: choice
        options: 
          - 'amd64'
          - 'arm64'
      build_type:
        description: 'Build type'
        required: true
        default: 'release'
        type: choice
        options:
          - 'release'
          - 'debug'
      retention_days:
        description: 'Artifact retention days'
        required: false
        default: '30'
        type: string

jobs:
  build-package:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Build package with Docker
      run: |
        echo "Building Debian package for ${{ inputs.architecture }}"
        echo "Build type: ${{ inputs.build_type }}"
        
        # Use our existing build script
        chmod +x build-package.sh
        ./build-package.sh
        
    - name: Verify package creation
      run: |
        echo "Checking for generated .deb packages..."
        ls -la *.deb || {
          echo "ERROR: No .deb packages found!"
          exit 1
        }
        
        # Show package info
        echo "Package details:"
        for deb in *.deb; do
          echo "=== $deb ==="
          dpkg --info "$deb"
          echo
        done
        
    - name: Upload package artifacts
      uses: actions/upload-artifact@v4
      with:
        name: debian-packages-${{ inputs.architecture }}-${{ inputs.build_type }}
        path: |
          *.deb
          *.changes
          *.buildinfo
        retention-days: ${{ inputs.retention_days }}
        compression-level: 0  # .deb files are already compressed
        overwrite: true
        
    - name: Generate build summary
      run: |
        echo "## ðŸ“¦ Build Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Architecture:** ${{ inputs.architecture }}" >> $GITHUB_STEP_SUMMARY
        echo "**Build Type:** ${{ inputs.build_type }}" >> $GITHUB_STEP_SUMMARY
        echo "**Retention:** ${{ inputs.retention_days }} days" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### Generated Packages" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        for deb in *.deb; do
          size=$(ls -lh "$deb" | awk '{print $5}')
          echo "- \`$deb\` ($size)" >> $GITHUB_STEP_SUMMARY
        done
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "ðŸ“¥ Download artifacts from the Actions tab above." >> $GITHUB_STEP_SUMMARY